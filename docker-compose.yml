version: "2"

networks:
  app-tier:
    driver: bridge

services:
  kafka:
    image: "bitnami/kafka:latest"
    logging:
      driver: none
    networks:
      - app-tier
    ports:
      - "9094:9094"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093

      - KAFKA_CFG_LISTENERS=CLIENT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9094

      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,CLIENT:PLAINTEXT

      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT

      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --create --if-not-exists && kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --describe",
        ]
      interval: 1s
      timeout: 3s
      retries: 25
      start_period: 0s

  producer:
    build: producer/
    ports:
      - "8000:80"
    networks:
      - app-tier
    depends_on:
      kafka:
        condition: service_healthy

  consumer:
    build: consumer/
    networks:
      - app-tier
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_healthy

  db:
    image: mysql
    restart: always
    ports:
      - "3306:3306"
    container_name: db
    environment:
      MYSQL_DATABASE: "test_db"
      MYSQL_USER: "test_user"
      MYSQL_PASSWORD: "test_password"
      MYSQL_ROOT_PASSWORD: "test_root"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - app-tier
